<?xml version='1.0' encoding='utf-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <name>Structr App</name>
    <artifactId>structr-app</artifactId>
    <version>6.0-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.structr</groupId>
        <artifactId>structr</artifactId>
        <version>6.0-SNAPSHOT</version>
    </parent>

    <properties>
        <assemblies.base.path>${project.parent.basedir}/structr-app/target</assemblies.base.path>
        <assemblies.resources.path>${project.parent.basedir}/structr-app/src/main/resources</assemblies.resources.path>

        <maven.build.timestamp.format>yyyyMMddHHmm</maven.build.timestamp.format>

        <!-- Skip flags -->
        <skipUITests>${skipTests}</skipUITests>
        <skipZip>false</skipZip>
        <skipDeb>false</skipDeb>
        <skipDocker>false</skipDocker>
        <skipDockerTestDB>true</skipDockerTestDB>
    </properties>

    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-db-driver-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-neo4j-bolt-driver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-memory-driver</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-base</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-advanced-mail-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-api-builder-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-csv-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-data-feeds-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-excel-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-file-access-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-flow-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-geo-transformations-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-media-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-messaging-engine-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-odf-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-pdf-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-security-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-text-search-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-translation-module</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.structr</groupId>
            <artifactId>structr-xmpp-module</artifactId>
            <version>${project.version}</version>
        </dependency>
    </dependencies>

    <!--
    BUILD ORDER (Maven Lifecycle Phases):
    - package               - Create JAR + copy dependencies to lib/
                               [zip-dist]    Create distribution ZIP
                               [deb-package] Create Debian package
    - pre-integration-test  - [ui-tests] Build Docker test image 'structr-ui-tests'
                               [ui-tests] Start Neo4j + Structr test containers
    - integration-test      - [ui-tests] Run Playwright tests
    - post-integration-test - [ui-tests] Stop test containers
    - install               - [docker-build] Build production image 'structr/structr:${version}'
    - deploy                - [docker-push] Push to Docker Hub
    -->

    <build>
        <!-- Artifact name: structr-app-6.0-SNAPSHOT-202510261155.abc12.jar -->
        <finalName>${project.artifactId}-${project.version}-${maven.build.timestamp}.${buildNumber}</finalName>

        <plugins>
            <!-- Generate Git-based build number -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>buildnumber-maven-plugin</artifactId>
                <version>3.2.1</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>create</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <shortRevisionLength>5</shortRevisionLength>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>replace-placeholder</id>
                        <phase>generate-resources</phase>
                        <configuration>
                            <target>
                                <delete file="src/main/resources/structr/index.html"/>

                                <copy file="src/main/resources/structr/index.template.html"
                                      tofile="src/main/resources/structr/index.html"/>

                                <replace file="src/main/resources/structr/index.html"
                                         token="@buildNumber@"
                                         value="${buildNumber}"/>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.google.code.maven-replacer-plugin</groupId>
                <artifactId>maven-replacer-plugin</artifactId>
                <version>1.4.1</version>
                <executions>
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>replace</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <file>src/main/resources/deb/bin/config</file>
                    <outputFile>target/deb/config</outputFile>
                    <replacements>
                        <replacement>
                            <token>FINAL_NAME</token>
                            <value>${project.build.finalName}</value>
                        </replacement>
                    </replacements>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.14.1</version>
                <configuration>
                    <source>25</source>
                    <target>25</target>
                </configuration>
            </plugin>

            <!-- Copy dependencies to target/lib/ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>

        <!-- ui-tests: Playwright UI tests in Docker containers
             - Builds Docker test image from distribution ZIP
             - Starts Neo4j + Structr containers on custom network
             - Installs Node.js/npm/Playwright
             - Runs Playwright tests from src/test/ui/
             Skip: -DskipUiTests=true -->
        <profile>
            <id>ui-tests</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.40.2</version>
                        <configuration>
                            <skip>${skipUITests}</skip>
                            <autoCreateCustomNetworks>true</autoCreateCustomNetworks>
                            <removeMode>all</removeMode>
                            <keepContainer>false</keepContainer>
                        </configuration>
                        <executions>
                            <!-- Stop containers after tests -->
                            <execution>
                                <id>ui-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipUITests}</skip>
                                    <executeStopOnVMShutdown>true</executeStopOnVMShutdown>
                                </configuration>
                            </execution>

                            <!-- Build test image (requires ZIP from package phase) -->
                            <execution>
                                <id>ui-image-build</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipUITests}</skip>
                                    <images>
                                        <!-- Playwright test runner image -->
                                        <image>
                                            <name>structr-playwright-tests</name>
                                            <build>
                                                <contextDir>${project.basedir}/src/test/playwright-ui-tests</contextDir>
                                                <dockerFile>ui-tests.Dockerfile</dockerFile>
                                            </build>
                                        </image>
                                        <image>
                                            <name>structr-ui-tests</name>
                                            <build>
                                                <contextDir>${project.basedir}</contextDir>
                                                <dockerFile>Dockerfile</dockerFile>
                                                <args>
                                                    <STRUCTR_VERSION>${project.version}-${maven.build.timestamp}.${buildNumber}</STRUCTR_VERSION>
                                                </args>
                                            </build>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>

                            <!-- Start Neo4j + Structr containers -->
                            <execution>
                                <id>ui-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipUITests}</skip>
                                    <images>
                                        <image>
                                            <name>neo4j:2025</name>
                                            <alias>database</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>ui-test-network</name>
                                                    <alias>neo4j-test</alias>
                                                </network>
                                                <wait>
                                                    <log>(.?)Bolt enabled on(.?)</log>
                                                    <time>20000</time>
                                                </wait>
                                                <env>
                                                    <NEO4J_ACCEPT_LICENSE_AGREEMENT>yes</NEO4J_ACCEPT_LICENSE_AGREEMENT>
                                                    <NEO4J_AUTH>neo4j/admin123</NEO4J_AUTH>
                                                    <NEO4J_dbms_security_auth__minimum__password__length>5</NEO4J_dbms_security_auth__minimum__password__length>
                                                </env>
                                            </run>
                                        </image>

                                        <image>
                                            <name>structr-ui-tests</name>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>ui-test-network</name>
                                                    <alias>structr-ui-tests</alias>
                                                </network>
                                                <wait>
                                                    <log>(.?)Initialization complete(.?)</log>
                                                    <time>200000</time>
                                                </wait>
                                                <env>
                                                    <AGREE_TO_STRUCTR_PRIVACY_POLICY>yes</AGREE_TO_STRUCTR_PRIVACY_POLICY>
                                                    <STRUCTR_setup_wizard_completed>false</STRUCTR_setup_wizard_completed>
                                                    <STRUCTR_db_uri>bolt://neo4j-test:7687</STRUCTR_db_uri>
                                                    <STRUCTR_db_username>neo4j</STRUCTR_db_username>
                                                    <STRUCTR_db_password>admin123</STRUCTR_db_password>
                                                </env>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>

                            <!-- Run Playwright tests in container -->
                            <execution>
                                <id>ui-run-tests</id>
                                <phase>integration-test</phase>
                                <goals>
                                    <goal>start</goal>
                                </goals>
                                <configuration>
                                    <skip>${skipUITests}</skip>
                                    <startParallel>false</startParallel>
                                    <images>
                                        <image>
                                            <name>structr-playwright-tests</name>
                                            <alias>playwright-runner</alias>
                                            <run>
                                                <network>
                                                    <mode>custom</mode>
                                                    <name>ui-test-network</name>
                                                    <alias>playwright-runner</alias>
                                                </network>
                                                <shmSize>2147483648</shmSize> <!-- 2GB shared memory -->
                                                <env>
                                                    <BASE_URL>http://structr-ui-tests:8082</BASE_URL>
                                                    <SUPERUSER_PASSWORD>structr1234</SUPERUSER_PASSWORD>
                                                    <DEBUG>pw:api</DEBUG>
                                                </env>
                                                <wait>
                                                    <!-- Wait for container to exit -->
                                                    <exit>0</exit>
                                                    <time>36000000</time> <!-- 60 minutes max -->
                                                </wait>
                                                <log>
                                                    <enabled>true</enabled>
                                                    <prefix>PLAYWRIGHT</prefix>
                                                    <color>cyan</color>
                                                </log>
                                            </run>
                                        </image>
                                    </images>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>


                </plugins>
            </build>
        </profile>

        <!-- zip-dist: Create distribution ZIP
             Output: target/structr-${version}-${timestamp}.${buildNumber}-dist.zip
             Skip: -DskipZip=true -->
        <profile>
            <id>zip-dist</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <version>3.7.1</version>
                        <configuration>
                            <finalName>structr-${project.version}-${maven.build.timestamp}.${buildNumber}</finalName>
                            <descriptors>
                                <descriptor>src/main/resources/assemblies/dist.xml</descriptor>
                            </descriptors>
                            <skipAssembly>${skipZip}</skipAssembly>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-assembly</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- deb-package: Create Debian package
             Output: target/structr-${version}.deb
             Skip: -DskipDeb=true -->
        <profile>
            <id>deb-package</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.vafer</groupId>
                        <artifactId>jdeb</artifactId>
                        <version>1.10</version>
                        <configuration>
                            <deb>${project.build.directory}/structr-${project.version}-${maven.build.timestamp}.${buildNumber}.deb</deb>
                            <skip>${skipDeb}</skip>
                            <controlDir>${basedir}/src/main/resources/deb/control</controlDir>
                            <dataSet>
                                <data>
                                    <src>${project.build.directory}/${project.build.finalName}.jar</src>
                                    <type>file</type>
                                    <dst>${project.build.finalName}.jar</dst>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/</prefix>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/target/lib</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/lib</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/structr</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/structr</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/target/deb/config</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/bin/</prefix>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/deb/bin/start</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/bin/</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/deb/bin/stop</src>
                                    <type>file</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/usr/lib/${project.parent.artifactId}/bin/</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/deb/init.d</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/init.d</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/deb/systemd</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/lib/systemd/system/</prefix>
                                        <filemode>755</filemode>
                                    </mapper>
                                </data>

                                <data>
                                    <src>${basedir}/src/main/resources/deb/logrotate.d</src>
                                    <type>directory</type>
                                    <mapper>
                                        <type>perm</type>
                                        <prefix>/etc/logrotate.d</prefix>
                                        <filemode>644</filemode>
                                    </mapper>
                                </data>
                            </dataSet>
                        </configuration>
                        <executions>
                            <execution>
                                <id>make-deb</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>jdeb</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- docker-build: Build production Docker image
             Requires: multiarch buildx builder
             Skip: -DskipDocker=true -->
        <profile>
            <id>docker-build</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.40.2</version>
                        <configuration>
                            <skip>${skipDocker}</skip>
                            <images>
                                <image>
                                    <name>structr/structr:${project.version}</name>
                                    <registry>https://index.docker.io/v1/</registry>
                                    <build>
                                        <contextDir>${project.basedir}</contextDir>
                                        <args>
                                            <STRUCTR_VERSION>${project.version}-${maven.build.timestamp}.${buildNumber}</STRUCTR_VERSION>
                                        </args>
                                        <buildx>
                                            <builderName>structr-buildx</builderName>
                                            <platforms>
                                                <platform>linux/amd64</platform>
                                                <platform>linux/arm64</platform>
                                            </platforms>
                                        </buildx>
                                    </build>
                                </image>
                            </images>
                        </configuration>
                        <executions>
                            <execution>
                                <id>docker-build-final</id>
                                <phase>install</phase>
                                <goals>
                                    <goal>build</goal>
                                    <goal>push</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>